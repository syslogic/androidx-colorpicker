// publish.gradle
task javadoc(type: Javadoc) {

    title = "Color Picker ${android.defaultConfig.versionName} API"
    source = android.sourceSets.main.java.srcDirs
    destinationDir = file("${project.buildDir}/outputs/javadoc/")
    configurations.implementation.setCanBeResolved(true)
    classpath  = files(new File("${android.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"))
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += fileTree(dir: "$buildDir/tmp/aarsToJars/")
    classpath += configurations.implementation
    exclude "**/BuildConfig.java", "**/R.java"
    failOnError false

    // options.verbose()
    // javadoc: warning - The code being documented uses modules but the packages
    // defined in https://developer.android.com/reference/ are in the unnamed module.
    options.links "https://docs.oracle.com/en/java/javase/11/docs/api/"
    options.linksOffline "https://developer.android.com/reference", "${android.sdkDirectory}/docs/reference"
    options.linkSource true
    options.author true

    doFirst {
        // extract AAR files
        configurations.implementation.filter { it.name.endsWith('.aar') }.each { aar ->
            copy {
                from zipTree(aar)
                include "**/classes.jar"
                into "$buildDir/tmp/aarsToJars/${aar.name.replace('.aar', '')}/"
            }
        }
        // provide JAR, which contains the generated data-binding classes
        def aar_main = new File("$buildDir/intermediates/aar_main_jar")
        if (aar_main.exists()) {
            copy {
                from aar_main
                include "**/classes.jar"
                into "$buildDir/tmp/aarsToJars/aar_main_jar/"
            }
        }
    }
}
javadoc.onlyIf {
    new File("$buildDir/intermediates/aar_main_jar").exists()
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier.set("javadoc")
    from javadoc.destinationDir
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    archiveClassifier.set("sources")
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

group = "io.syslogic"
version = android.defaultConfig.versionName

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                groupId = "io.syslogic"
                artifactId = "androidx-colorpicker"
                from components.getByName('release')
                version = android.defaultConfig.versionName
                pom {
                    name = 'Color Picker'
                    description = 'A simple color-picker library for Android'
                    url = "https://github.com/syslogic/${artifactId}"
                    scm {
                        connection = "scm:git:git://github.com/syslogic/${artifactId}.git"
                        developerConnection = "scm:git:ssh://github.com/syslogic/${artifactId}.git"
                        url = "https://github.com/syslogic/${artifactId}/"
                    }
                }
            }
        }
    }
}
