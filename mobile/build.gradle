// Module :mobile
plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.androidx.navigation.safeargs)
    alias(libs.plugins.kotlin.compose.compiler)
    alias(libs.plugins.kotlin.android)
    // alias(libs.plugins.devtools.ksp)
    alias(libs.plugins.kotlin.kapt)
}

base {
    archivesName = 'colorpicker_demo_' + version_name
}

android {
    namespace "io.syslogic.demo.colorpicker"
    buildToolsVersion = '35.0.0'
    compileSdk compile_sdk
    defaultConfig {
        applicationId "io.syslogic.demo.colorpicker"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testBuildType "debug"
        versionCode version_code
        versionName version_name
        targetSdk target_sdk
        minSdk min_sdk
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = 17
    }

    buildFeatures {
        buildConfig true
        dataBinding true
        compose true
    }

    composeOptions {
    }

    composeCompiler {
        enableStrongSkippingMode = true
        reportsDestination = layout.buildDirectory.dir("compose_compiler")
        stabilityConfigurationFile = rootProject.layout.projectDirectory.file("stability_config.conf")
    }

    buildTypes {
        debug {
            minifyEnabled false
        }
        release {
            minifyEnabled false
        }
    }

    lint {
        lintConfig file('../lint.xml')
        checkAllWarnings true
        warningsAsErrors true
        abortOnError false
        showAll false
    }
}

dependencies {

    // Use either Jitpack repository or project module :library (local).
    // implementation "io.syslogic:androidx-colorpicker:$version_name"
    implementation project(path: ':library')

    implementation libs.material.design

    implementation libs.androidx.core.ktx
    implementation libs.androidx.appcompat
    implementation libs.androidx.preference.ktx

    androidTestImplementation libs.androidx.navigation.testing
    implementation libs.androidx.navigation.runtime.ktx
    implementation libs.androidx.navigation.fragment.ktx
    implementation libs.androidx.navigation.ui.ktx

    // https://mvnrepository.com/artifact/androidx.compose
    // https://developer.android.com/jetpack/compose/tooling#bom
    implementation platform(libs.androidx.compose.bom)
    implementation libs.bundles.androidx.compose.app

    // jUnit
    testImplementation libs.junit

    // Required for connected tests.
    // https://mvnrepository.com/artifact/androidx.test/monitor
    debugImplementation libs.androidx.test.monitor

    /* Composable Preview */
    debugImplementation libs.androidx.compose.ui.tooling

    // https://mvnrepository.com/artifact/androidx.test.ext
    androidTestImplementation libs.bundles.androidx.test

    // https://mvnrepository.com/artifact/androidx.test.espresso
    androidTestImplementation libs.bundles.androidx.espresso
    // The following dependency can be either "implementation" or "androidTestImplementation",
    // depending on whether you want it to appear on your APK's compile classpath or the test APK classpath.
    // androidTestImplementation libs.androidx.espresso.idling.resource

    // Test rules and transitive dependencies:
    androidTestImplementation libs.androidx.compose.uitest

    // Needed for createComposeRule, but not createAndroidComposeRule:
    //noinspection UseTomlInstead,GradleDependency
    debugImplementation "androidx.compose.ui:ui-test-manifest"
}

// disable caching
configurations.configureEach {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}
