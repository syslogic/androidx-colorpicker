// Module :library
plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'maven-publish'
}

android {
    compileSdk compile_sdk
    defaultConfig {
        minSdk min_sdk
        targetSdk target_sdk
        buildToolsVersion build_tools_version
        setProperty('archivesBaseName', 'colorpicker')
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        consumerProguardFiles "${project.rootDir}/proguard/consumer.pro"
    }
    compileOptions {
        sourceCompatibility java_version
        targetCompatibility java_version
    }
    kotlinOptions {
        jvmTarget = java_version
    }
    composeOptions {
        kotlinCompilerExtensionVersion "$compose_compiler"
    }
    packagingOptions {
        resources.pickFirsts.add('META-INF/LGPL2.1')
        resources.pickFirsts.add('META-INF/AL2.0')
    }
    buildFeatures {
        dataBinding true
        compose true
    }
    buildTypes {
        debug {
            // it breaks the data-binding, eg. when running ./gradlew :library:publishToMavenLocal
            testCoverageEnabled false
            minifyEnabled false
        }
        release {
            minifyEnabled false
        }
    }
    lint {
        lintConfig file('../lint.xml')
        checkAllWarnings true
        warningsAsErrors true
        abortOnError false
        showAll false
    }
    publishing {
        singleVariant('release') {
            withSourcesJar()
            withJavadocJar()
        }
    }
}

dependencies {

    implementation 'com.google.android.material:material:1.6.1'
    // implementation "com.google.android.material:compose-theme-adapter-3:1.0.13"

    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation 'androidx.preference:preference-ktx:1.2.0'

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    // implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.2'

    // https://mvnrepository.com/artifact/androidx.compose
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.foundation:foundation:$compose_version"
    // implementation "androidx.compose.material:material-icons-core:$compose_version"
    // implementation 'androidx.compose.material:material-icons-extended:$compose_version'

    /* Compose Preview */
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation "androidx.customview:customview-poolingcontainer:1.0.0-rc01"
}

task javadoc(type: Javadoc) {

    title = "Color Picker ${android.defaultConfig.versionName} API"
    source = android.sourceSets.main.java.srcDirs
    destinationDir = file("${project.buildDir}/outputs/javadoc/")
    configurations.implementation.setCanBeResolved(true)
    classpath  = files(new File("${android.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"))
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += fileTree(dir: "$buildDir/tmp/aarsToJars/")
    classpath += configurations.implementation
    exclude "**/BuildConfig.java", "**/R.java"
    failOnError false

    // options.verbose()
    // javadoc: warning - The code being documented uses modules but the packages
    // defined in https://developer.android.com/reference/ are in the unnamed module.
    options.links "https://docs.oracle.com/en/java/javase/11/docs/api/"
    options.linksOffline "https://developer.android.com/reference", "${android.sdkDirectory}/docs/reference"
    options.linkSource true
    options.author true

    doFirst {

        // extract AAR files
        configurations.implementation.filter { it.name.endsWith('.aar') }.each { aar ->
            copy {
                from zipTree(aar)
                include "**/classes.jar"
                into "$buildDir/tmp/aarsToJars/${aar.name.replace('.aar', '')}/"
            }
        }

        // provide JAR, which contains the generated data-binding classes
        def aar_main = new File("$buildDir/intermediates/aar_main_jar")
        if (aar_main.exists()) {
            copy {
                from aar_main
                include "**/classes.jar"
                into "$buildDir/tmp/aarsToJars/aar_main_jar/"
            }
        }
    }
}
javadoc.onlyIf {
    new File("$buildDir/intermediates/aar_main_jar").exists()
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier.set('javadoc')
    from javadoc.destinationDir
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    archiveClassifier.set('sources')
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

group = 'io.syslogic'
version = version_name

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                groupId = 'io.syslogic'
                artifactId = 'androidx-colorpicker'
                from components.getByName('release')
                version = version_name
                pom {
                    name = 'Color Picker'
                    description = 'A simple color-picker library for Android'
                    url = "https://github.com/syslogic/${artifactId}"
                    scm {
                        connection = "scm:git:git://github.com/syslogic/${artifactId}.git"
                        developerConnection = "scm:git:ssh://github.com/syslogic/${artifactId}.git"
                        url = "https://github.com/syslogic/${artifactId}/"
                    }
                }
            }
        }
    }
}
